/**
 * It is the ajax add to cart.
 *
 * @package woorestaurant
 */

! (function (n) {
	"use strict";
	n( document ).on(
		"submit",
		".woorst-woocommerce form",
		function (e) {
			n( "#food_modal .woorst-woocommerce > div .wrsfd-out-notice" ).remove();
			var o = n( this ).find( ".single_add_to_cart_button" ),
			t     = n( this ),
			a     = t.find( "input[name=add-to-cart]" ).val() || o.val(),
			d     = n( ".wrs-fdlist > input[name=food_loc]" ).val();
			if (a && ! o.is( ".disabled" )) {
				e.preventDefault();
				var i = { action: "woo_restaurant_add_to_cart", "add-to-cart": a, loc: d };
				t.serializeArray().forEach(
					function (e) {
						i[e.name] = e.value;
					}
				),
					n( document.body ).trigger( "adding_to_cart", [o, i] ),
					n( this ).find( ".wrrow-group.wrs-checkbox" ).length &&
					n( this )
						.find( ".wrrow-group.wrs-checkbox" )
						.each(
							function () {
								var e = n( this ).find( ".wrs-options" ).attr( "name" ),
								t     = [];
								n( this )
								.find( 'input[name="' + e + '"]:checked' )
								.each(
									function () {
										t.push( n( this ).val() );
									}
								),
								(i[e] = t);
							}
						),
					n( ".wc-pao-addon-checkbox" ).length &&
					n( ".wc-pao-addon-checkbox" ).each(
						function () {
							var e = n( this ).attr( "name" ),
							t     = [];
							n( 'input[name="' + e + '"]:checked' ).each(
								function () {
									t.push( n( this ).val() );
								}
							),
							(i[e] = t);
						}
					),
					n( ".ppom-check-input" ).length &&
					n( ".ppom-check-input" ).each(
						function () {
							var e, t;
							"checkbox" == n( this ).attr( "type" ) &&
							((e = n( this ).attr( "name" )),
							(t = []),
							n( 'input[name="' + e + '"]:checked' ).each(
								function () {
									t.push( n( this ).val() );
								}
							),
							(i[e] = t));
						}
					),
					n( ".wccf_product_field_checkbox" ).length &&
					n( ".wccf_product_field_checkbox" ).each(
						function () {
							var e = n( this ).attr( "name" ),
							t     = [];
							n( 'input[name="' + e + '"]:checked' ).each(
								function () {
									t.push( n( this ).val() );
								}
							),
							(i[e] = t);
						}
					);
				var c = n( ".wrsfd-cart-mini" ).html();
				return (
					n.ajax(
						{
							type: "post",
							url: wc_add_to_cart_params.ajax_url,
							data: i,
							beforeSend: function (e) {
								o.removeClass( "added" ).addClass( "wrs-loading" );
							},
							complete: function (e) {
								o.removeClass( "wrs-loading" );
								var t = n( ".wrsfd-cart-mini" );
								c != t && (e.error || o.addClass( "added" ));
							},
							success: function (e) {
								var t;
								e.error
								? n( "#food_modal .woorst-woocommerce > div" ).append( e.message )
								: (n( document.body ).trigger( "added_to_cart", [e.fragments, e.cart_hash, o] ),
								n( ".woocommerce-notices-wrapper" ).empty().append( e.notices ),
								n( ".wrs-fdlist.wrs-food-plug .wrsfd-choice.wrs-loading" ).length
									? n( ".wrs-fdlist.wrs-food-plug .wrsfd-choice.wrs-loading" ).removeClass( "wrs-loading" )
									: n( ".wrs-fdlist .wrstyle-3 .wrstyle-3-image .wrsbt-inline span.wrs-loading" ).length && n( ".wrs-fdlist .wrstyle-3 .wrstyle-3-image .wrsbt-inline span.wrs-loading" ).removeClass( "wrs-loading" ),
								(t = n( ".wrsfd-cart-mini" ).html()),
								c == t && (o.removeClass( "added" ), "yes" == n( "#food_modal .modal-content" ).data( "close-popup" ) && n( "#food_modal .wr_close" ).trigger( "click" )),
								(e = o.closest( ".wrs-fdlist " ).attr( "id" )),
								(t = n( "#" + e ).hasClass( "table-layout" ) ? "table" : ""),
								0 == (e = o.closest( "#food_modal" ).find( "img" ).eq( 0 )).length &&
									("table" != t
										? 0 == (e = o.closest( ".item-grid" ).find( "img" ).eq( 0 )).length && 0 == (e = o.closest( ".item-grid" ).find( ".wrs-fly-cart" ).eq( 0 )).length && (e = o.closest( ".item-grid" ))
										: 0 == (e = o.closest( "tr" ).find( "img" ).eq( 0 )).length && (e = o.closest( "tr" ).find( ".item-grid" ))),
								0 == e.length && jQuery( ".wr_modal.wrsfd-modal-active" ).length && (e = jQuery( ".wr_modal.wrsfd-modal-active .wrsmd-no-img" )),
								(t = e),
								0 != (e = jQuery( ".wrr_floating_cart_btn" )).length &&
									t.length &&
									t
										.clone()
										.offset( { top: t.offset().top, left: t.offset().left } )
										.css( { opacity: "0.5", position: "absolute", height: "150px", width: "150px", "z-index": "1001" } )
										.appendTo( jQuery( "body" ) )
										.animate( { top: e.offset().top + 10, left: e.offset().left, width: 40, height: 40 }, 800 )
										.animate(
											{ width: 0, height: 0 },
											function () {
												jQuery( this ).detach();
											}
										),
										setTimeout(
											function () {
												n( '.wrr_cart_icon' ).addClass( 'fb-shake-animation' )},
											1000
										),
										setTimeout(
											function () {
												n( '.wrr_cart_icon' ).removeClass( 'fb-shake-animation' )
											},
											2000
										),
								n( ".wrsfd-cart-mini" ).css( "opacity", ".6" ),
								n.ajax(
									{
										type: "post",
										url: wc_add_to_cart_params.ajax_url,
										data: { action: "woo_restaurant_refresh_cart" },
										success: function (e) {
											n( "div.wrsfd-cart-mini" ).remove(),
											// n(e.fragments["div.wrsfd-cart-mini"]).insertAfter(".wrsfd-cart-content .wrsfd-close-cart"),.
												n( "span.wrr_cart_count" ).replaceWith( e.fragments["span.wrr_cart_count"] );
												n( ".wrr_cart_popup_modal .mini-cart-content-inner" ).html( e.fragments["div.wrsfd-cart-mini"] );
										},
										}
								),
								"yes" == n( "#food_modal .modal-content" ).data( "close-popup" ) && n( "#food_modal .wr_close" ).trigger( "click" ),
								n( document ).trigger( "wrsfqv_added_tocart" ));
							},
						}
					),
				! 1
				);
			}
		}
	);
})( jQuery );
